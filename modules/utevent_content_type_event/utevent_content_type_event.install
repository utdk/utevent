<?php

/**
 * @file
 * Event content type installation file.
 */

use Drupal\pathauto\Entity\PathautoPattern;
use Drupal\metatag\Entity\MetatagDefaults;
use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_install().
 */
function utevent_content_type_event_install() {
  $modules_to_install = [
    'metatag_twitter_cards',
    'metatag_open_graph',
    'schema_metatag',
    'schema_event',
  ];
  foreach ($modules_to_install as $module) {
    if (\Drupal::moduleHandler()->moduleExists($module) === FALSE) {
      \Drupal::service('module_installer')->install([$module]);
    }
  }
  // Import default configuration that can subsequently be managed by sites.
  // For SaaS-type sites to inherit changes to this configuration, an update
  // hook needs to be added that will programmatically load the configuration
  // entity and update it.
  $module_handler = \Drupal::service('module_handler');
  $module_path = $module_handler->getModule('utevent_content_type_event')->getPath();
  $configurations = [
    'metatag.metatag_defaults.node__utevent_event',
    'pathauto.pattern.utevent_event',
  ];
  foreach ($configurations as $configuration) {
    $config_path = $module_path . '/config/default/' . $configuration . '.yml';
    $data = Yaml::parse(file_get_contents($config_path));
    \Drupal::configFactory()->getEditable($configuration)->setData($data)->save(TRUE);
  }
}

/**
 * Implements hook_uninstall().
 */
function utevent_content_type_event_uninstall() {
  if ($metatag = MetatagDefaults::load('node__utevent_event')) {
    $metatag->delete();
  }
  if ($pattern = PathautoPattern::load('utevent_event')) {
    $pattern->delete();
  }
}
